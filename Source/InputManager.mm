//////////////////////////////////////////////////////////////////////////////
// InputManager.m
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
// Imports
//////////////////////////////////////////////////////////////////////////////
#import "InputManager.h"

//////////////////////////////////////////////////////////////////////////////
// InputManager implementation
//////////////////////////////////////////////////////////////////////////////
@implementation InputManager

//////////////////////////////////////////////////////////////////////////////
// init
//////////////////////////////////////////////////////////////////////////////
- init
{
	self = [super init];
	if (self)
	{
		keyUp		= NO;
		keyDown		= NO;
		keyLeft		= NO;
		keyRight	= NO;
	}
	return self;
}

//////////////////////////////////////////////////////////////////////////////
// setKey
//////////////////////////////////////////////////////////////////////////////
- (void)setKey:(NSEvent *)theEvent to:(BOOL)pressed
{
	unsigned int modifierFlags = (unsigned int)[theEvent modifierFlags];
	
	if (modifierFlags & NSFunctionKeyMask)
	{
		unichar ch = [[theEvent characters] characterAtIndex:0];
		
		switch (ch)
		{
			case NSUpArrowFunctionKey:		keyUp		= pressed;	break;
			case NSDownArrowFunctionKey:	keyDown		= pressed;	break;
			case NSLeftArrowFunctionKey:	keyLeft		= pressed;	break;
			case NSRightArrowFunctionKey:	keyRight	= pressed;	break;
			default:						break;
		}
	}
}

//////////////////////////////////////////////////////////////////////////////
// keyDown
//////////////////////////////////////////////////////////////////////////////
- (void)keyDown:(NSEvent *)theEvent
{
	[self setKey:theEvent to:YES];
}

//////////////////////////////////////////////////////////////////////////////
// keyUp
//////////////////////////////////////////////////////////////////////////////
- (void)keyUp:(NSEvent *)theEvent
{
	[self setKey:theEvent to:NO];
}


@end
